pipeline {
    agent any

    environment {
        ENV_VAR = 'valor'
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    parameters {
        string(name: 'PARAM1', defaultValue: 'default', description: 'Um parâmetro de string')
        booleanParam(name: 'PARAM2', defaultValue: true, description: 'Um parâmetro booleano')
    }

    triggers {
        cron('H 4 * * 1-5')
    }

    stages {
        stage('Preparação') {
            steps {
                script {
                    echo 'Preparando o ambiente...'
                }
            }
        }

        stage('Paralelo e Matriz') {
            parallel {
                stage('Tarefa A') {
                    steps {
                        echo 'Executando a Tarefa A'
                    }
                }
                stage('Tarefa B') {
                    matrix {
                        axes {
                            axis {
                                name 'BROWSER'
                                values 'chrome', 'firefox'
                            }
                            axis {
                                name 'OS'
                                values 'linux', 'windows'
                            }
                        }
                        stages {
                            stage('Teste') {
                                steps {
                                    echo "Testando no navegador: ${BROWSER} e sistema: ${OS}"
                                }
                            }
                        }
                    }
                }
            }
        }

        stage('Entrada de Usuário') {
            steps {
                input {
                    message "Continuar com a implantação?"
                    ok "Sim"
                    parameters {
                        string(name: 'RELEASE_VERSION', defaultValue: '1.0.0', description: 'Versão para liberar')
                    }
                }
            }
        }

        stage('Execução Condicional') {
            when {
                equals expected: 'production', actual: env.ENV_VAR
            }
            steps {
                echo 'Executando etapa condicional, somente no ambiente de produção.'
            }
        }
    }

    post {
        success {
            echo 'Pipeline executado com sucesso!'
        }
        failure {
            echo 'Pipeline falhou!'
        }
        always {
            cleanWs()
        }
    }

    environment {
        MY_CREDENTIALS = credentials('my-credentials-id')
    }

    stages {
        stage('Usando Credenciais') {
            steps {
                script {
                    echo "Usuário: ${MY_CREDENTIALS_USR}"
                    withCredentials([usernamePassword(credentialsId: 'my-credentials-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        echo "Username: ${env.USERNAME}"
                        echo "Password: ${env.PASSWORD}"
                    }
                }
            }
        }
    }
}
